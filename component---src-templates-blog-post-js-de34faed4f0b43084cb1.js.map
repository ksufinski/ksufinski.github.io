{"version":3,"file":"component---src-templates-blog-post-js-de34faed4f0b43084cb1.js","mappings":"uJAuCA,IA5BY,WAAO,IAAD,EAmBVA,EAAW,WAlBJC,EAAAA,EAAAA,gBAAe,cAkBHC,KAAKC,oBAAb,aAAG,EAAwBH,YAE5C,OACE,uBAAKI,UAAU,OACb,4BAAOJ,M,uDCMb,IApCe,SAAC,GAAiC,IAAhCK,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAExBC,EADQ,MACKH,EAASI,SAiB5B,OAdID,EAEI,sBAAIJ,UAAU,gBACV,gBAAC,EAAAM,KAAD,CAAMC,GAAG,KAAKL,IAKlB,gBAAC,EAAAI,KAAD,CAAMN,UAAU,mBAAmBO,GAAG,KACjCL,GAMT,2BACI,gBAAC,IAAD,MACA,uBAAKF,UAAU,iBAAiB,oBAAmBI,GAE/C,4BAAOD,GACP,oCACO,IAAIK,MAAOC,cADlB,mBAGI,qBAAGC,KAAK,4BAAR,e,kFCkCpB,UA3DyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SAC1BW,EAAOD,EAAKE,eACZC,GAAY,UAAAH,EAAKb,KAAKC,oBAAV,eAAwBG,QAAxB,QACVa,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,gBAAC,IAAD,CAAQf,SAAUA,EAAUC,MAAOY,GACjC,gBAAC,IAAD,CACEZ,MAAOU,EAAKK,YAAYf,MACxBN,YAAagB,EAAKK,YAAYrB,aAAegB,EAAKM,UAEpD,2BACElB,UAAU,YACVmB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,WAAWrB,UAAU,aAAaY,EAAKK,YAAYf,OAChE,yBAAIU,EAAKK,YAAYK,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQZ,EAAKa,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKrB,UAAU,iBACb,sBACE0B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAT,KAAD,CAAMC,GAAIQ,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASE,YAAYf,QAI9B,0BACGc,GACC,gBAAC,EAAAV,KAAD,CAAMC,GAAIS,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKC,YAAYf,MADpB","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const description = data.site.siteMetadata?.description;\n\n  return (\n    <div className=\"bio\">\n      <code>{description}</code>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport {Link} from \"gatsby\"\nimport Nav from \"./nav\";\n\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`\n    const isRootPath = location.pathname === rootPath\n    let header\n\n    if (isRootPath) {\n        header = (\n            <h1 className=\"main-heading\">\n                <Link to=\"/\">{title}</Link>\n            </h1>\n        )\n    } else {\n        header = (\n            <Link className=\"header-link-home\" to=\"/\">\n                {title}\n            </Link>\n        )\n    }\n\n    return (\n        <div>\n            <Nav/>\n            <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n                {/*<header className=\"global-header\">{header}</header>*/}\n                <main>{children}</main>\n                <footer>\n                    © {new Date().getFullYear()}, Built with\n                    {` `}\n                    <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n                </footer>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\" className=\"postTitle\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["description","useStaticQuery","site","siteMetadata","className","location","title","children","isRootPath","pathname","Link","to","Date","getFullYear","href","data","post","markdownRemark","siteTitle","previous","next","frontmatter","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}