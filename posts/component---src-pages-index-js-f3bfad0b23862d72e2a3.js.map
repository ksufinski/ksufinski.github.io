{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,oIAuEeA,UA/DG,SAAC,GAAsB,IAAD,EAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAChBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAGrC,OAAqB,IAAjBF,EAAMG,OAEF,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GAC/B,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,yLAYR,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GAC/B,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,wBAAIK,MAAO,CAACC,UAAU,SACjBL,EAAMM,KAAI,SAAAC,GACP,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACI,wBAAIC,IAAKJ,EAAKE,OAAOC,MACjB,6BACIE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,gCACI,4BACI,kBAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAChBM,SAAS,OACX,0BACIA,SAAS,YAAYjB,KAGjC,+BAAQQ,EAAKC,YAAYS,OAE7B,iCACI,uBACIC,wBAAyB,CACrBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAEjDL,SAAS,yBAc1C,IAAMM,EAAS","file":"component---src-pages-index-js-f3bfad0b23862d72e2a3.js","sourcesContent":["import React from \"react\"\nimport {Link, graphql} from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Nav from \"../components/nav\";\n\nconst BlogIndex = ({data, location}) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const posts = data.allMarkdownRemark.nodes\n\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <SEO title=\"All posts\"/>\n                <Bio/>\n                <p>\n                    No blog posts found. Add markdown posts to \"content/blog\"\n                    (or the\n                    directory you specified for the \"gatsby-source-filesystem\"\n                    plugin in\n                    gatsby-config.js).\n                </p>\n            </Layout>\n        )\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\"/>\n            <Bio/>\n            <ol style={{listStyle: `none`}}>\n                {posts.map(post => {\n                    const title = post.frontmatter.title || post.fields.slug\n\n                    return (\n                        <li key={post.fields.slug}>\n                            <article\n                                className=\"post-list-item\"\n                                itemScope\n                                itemType=\"http://schema.org/Article\"\n                            >\n                                <header>\n                                    <h2>\n                                        <Link to={post.fields.slug}\n                                              itemProp=\"url\">\n                                            <span\n                                                itemProp=\"headline\">{title}</span>\n                                        </Link>\n                                    </h2>\n                                    <small>{post.frontmatter.date}</small>\n                                </header>\n                                <section>\n                                    <p\n                                        dangerouslySetInnerHTML={{\n                                            __html: post.frontmatter.description || post.excerpt,\n                                        }}\n                                        itemProp=\"description\"\n                                    />\n                                </section>\n                            </article>\n                        </li>\n                    )\n                })}\n            </ol>\n        </Layout>\n    )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}